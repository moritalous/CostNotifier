AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Cost Notifier

Globals:
  Function:
    Timeout: 60

Parameters: 
  EmailParameter:
    Type: String
    Description: SNS Publish email address.
    AllowedPattern: ^[\w!#%&'/=~`\*\+\?\{\}\^\$\-\|]+(\.[\w!#%&'/=~`\*\+\?\{\}\^\$\-\|]+)*@[\w!#%&'/=~`\*\+\?\{\}\^\$\-\|]+(\.[\w!#%&'/=~`\*\+\?\{\}\^\$\-\|]+)*$
  
  ScheduleParameter:
    Type: String
    Description: The schedule or rate (frequency) that determines when CloudWatch Events runs the rule. For example cron(0 0 * * ? *) cron(0 12 * * MON *) rate(1 day) rate(7 days)
    Default: cron(0 0 * * ? *)
    
Resources:
  CostNotifierFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cost_notifier/
      # CodeUri: s3://sam-deploy-bucket-781749372177/815988fe16280822d19e864e3ad7f1ce
      Handler: app.lambda_handler
      Runtime: python3.6
      Events:
        ScheduleEvent:
          Type: Schedule
          Properties:
            Schedule: 
              Ref: ScheduleParameter
      Environment:
        Variables:
          SNS_TOPIC_ARN: !Ref SnsTopic
      Policies:
        # CostExplorerReadOnlyPolicy: {}
        - Statement:
            - Effect: Allow
              Action:
                - ce:GetCostAndUsage
                - ce:GetDimensionValues
                - ce:GetReservationCoverage
                - ce:GetReservationPurchaseRecommendation
                - ce:GetReservationUtilization
                - ce:GetTags
              Resource: '*'
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt SnsTopic.TopicName

  SnsTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: SNS Topic for Cost Notifier
      Subscription:
        - Protocol: email
          Endpoint: 
            Ref: EmailParameter

Outputs:
  CostNotifierFunction:
    Description: Cost Notifier Lambda Function ARN
    Value: !GetAtt CostNotifierFunction.Arn
  SnsTopicArn:
    Description: SNS Topic ARN
    Value: !Ref SnsTopic
